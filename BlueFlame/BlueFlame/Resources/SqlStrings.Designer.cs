//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.1433
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueFlame.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SqlStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlStrings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BlueFlame.Resources.SqlStrings", typeof(SqlStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SELECT DISTINCT p.productname, l.licensekey 
        ///FROM licenselog l
        ///LEFT JOIN products p ON (p.file = l.file AND p.productid = l.productid)
        ///WHERE l.user = ?user AND l.message = &apos;3000&apos; ähnelt.
        /// </summary>
        internal static string GetAllLicensesForUser {
            get {
                return ResourceManager.GetString("GetAllLicensesForUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SELECT CONCAT(i.path,&apos;\\&apos;,i.file,&apos;.&apos;,i.ext) AS fullname, p.file,p.productid,p.productname,p.productdescription,i.date,i.lang, i.dvdmedia FROM products p, images i WHERE p.file=i.file ORDER BY productname ähnelt.
        /// </summary>
        internal static string GetAllProducts {
            get {
                return ResourceManager.GetString("GetAllProducts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SELECT CONCAT(i.path,&apos;\\&apos;,i.file,&apos;.&apos;,i.ext) AS filename, p.productname FROM products p LEFT JOIN images i ON(i.file = p.file) WHERE p.file = ?fileId AND p.productid = ?productId LIMIT 1 ähnelt.
        /// </summary>
        internal static string GetFileInfo {
            get {
                return ResourceManager.GetString("GetFileInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SELECT licensekey, multi FROM license WHERE file = ?file AND productId = ?productid AND distributed = 0 LIMIT 1 ähnelt.
        /// </summary>
        internal static string GetLicense {
            get {
                return ResourceManager.GetString("GetLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SELECT licensekey FROM license WHERE file = ?file AND productId = ?productid ähnelt.
        /// </summary>
        internal static string GetLicenseDistributed {
            get {
                return ResourceManager.GetString("GetLicenseDistributed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SELECT licensekey, time FROM licenselog WHERE file= ?file AND productid = ?productid AND user = ?user AND domain = ?domain AND message = 3000 ähnelt.
        /// </summary>
        internal static string GetLicenseFromLog {
            get {
                return ResourceManager.GetString("GetLicenseFromLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SELECT productname, licensefromfile, licensefromproductid FROM products WHERE file= ?fileId AND productid= ?productId ähnelt.
        /// </summary>
        internal static string GetLicenseSourceFile {
            get {
                return ResourceManager.GetString("GetLicenseSourceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die INSERT INTO licenselog (user,file,productid,licensekey,time,message,domain) VALUES (?user,?file,?productid,?licensekey,?time,?message,?domain) ähnelt.
        /// </summary>
        internal static string NotifyLicenseLog {
            get {
                return ResourceManager.GetString("NotifyLicenseLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die INSERT INTO userlog VALUES(NOW(), ?user, ?message, ?domain) ähnelt.
        /// </summary>
        internal static string NotifyUserLog {
            get {
                return ResourceManager.GetString("NotifyUserLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SELECT CONCAT(i.path,&apos;\\&apos;,i.file,&apos;.&apos;,i.ext) AS fullname, p.file,p.productid,p.productname,p.productdescription,i.date,i.lang, i.dvdmedia
        ///FROM products p, images i where p.file=i.file 
        ///AND (p.productname LIKE ?productName OR p.productdescription LIKE ?description) ORDER BY p.productname ähnelt.
        /// </summary>
        internal static string Search {
            get {
                return ResourceManager.GetString("Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UPDATE license SET distributed = 1 WHERE file = ?file AND productid = ?productid AND licensekey = ?licensekey ähnelt.
        /// </summary>
        internal static string SetLicenseDistributed {
            get {
                return ResourceManager.GetString("SetLicenseDistributed", resourceCulture);
            }
        }
    }
}
